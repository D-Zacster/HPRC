format_pvalue = function(pvalue,out_format="string") {
options(scipen=999)
out_pval = round(pvalue,digits = 4)
if (out_format=="string") {
if (out_pval<0.0001) {
out_pval = "<0.0001"
} else {
out_pval = as.character(out_pval)
}
} else if (out_format=="numeric") {
if (out_pval<0.0001) {
out_pval = 0
}
}
return(out_pval)
}
load_libraries()
require(tidyverse)
require(tidyverse)
require(tidyverse1)
require(tidyverse1)
!require(tidyverse1)
!require(tidyverse1,magt)
libraries %in% installed.packages()
libraries = c("tidyverse","magrittr","haven")
libraries %in% installed.packages()
libraries[!libraries %in% installed.packages()]
!libraries %in% installed.packages()
missing_packages = libraries[!libraries %in% installed.packages()]
for(package in missing_packages) {
install.packages(package)
}
missing_packages = setdiff(packages, rownames(installed.packages()))
missing_packages
libraries = c("tidyverse","magrittr","haven")
missing_packages = setdiff(libraries, rownames(installed.packages()))
missing_packages
is_empty(missing_packages)
!is_empty(missing_packages)
load_libraries()
load_libraries()
load_libraries()
load_libraries()
missing_packages = setdiff(libraries, rownames(installed.packages()))
libraries = c("tidyverse","magrittr","haven")
missing_packages = setdiff(libraries, rownames(installed.packages()))
is.na(missing_packages)
is.null(missing_packages)
length(missing_packages)
length(missing_packages)>0
load_libraries()
library(HPRC)
load_libraries()
library(HPRC)
setwd("./HPRC")
document()
library("devtools")
library(roxygen2)
document()
?load_libraries
install("HPRC")
setwd("..")
install("HPRC")
install_github('HPRC','D-Zacster')
?install_github
devtools::install_github('HPRC','D-Zacster')
install.packages("devtools")
install.packages("roxygen2")
install_github('https://github.com/D-Zacster/HPRC','D-Zacster')
library(devtools)
install_github('https://github.com/D-Zacster/HPRC','D-Zacster')
install_github('HPRC','D-Zacster')
install_github('D-Zacster/HPRC')
git push -u origin master
library(HPRC)
?load_libraries
document()
?load_libraries
document()
?load_libraries
require("devtools")
require("devtools")
devtools::install_github("D-Zacster/HPRC")
.rs.restartR()
rs.restartR()
library(HPRC)
library(HPRC)
?load_libraries
document()
library(HPRC)
?update_HPRC
document
document()
unloadNamespace(HPRC)
library(HPRC)
unloadNamespace(HPRC)
unloadNamespace(HPRC:HPRC)
unloadNamespace(HPRC::HPRC)
document
document()
setwd(r"(C:\Users\Zacb3\OneDrive - University of Oklahoma\HPRC Files\R\HPRC)")
library(roxygen2)
setwd(r"(C:\Users\Zacb3\OneDrive - University of Oklahoma\HPRC Files\R\HPRC)")
document()
library(devtools)
setwd(r"(C:\Users\Zacb3\OneDrive - University of Oklahoma\HPRC Files\R\HPRC)")
document()
try(detach("package:HPRC", unload=TRUE))
try(detach("package:HPRC", unload=TRUE))
tryCatch(detach("package:HPRC", unload=TRUE))
try({detach("package:HPRC", unload=TRUE)})
try({detach("package:HPRC", unload=TRUE)},error = function(){})
tryCatch({detach("package:HPRC", unload=TRUE)},error = function(){print("HPRC package not loaded, continuing update.")})
tryCatch(expr = {detach("package:HPRC", unload=TRUE)})
tryCatch(expr = {suppressWarnings(detach("package:HPRC", unload=TRUE))})
tryCatch(expr = {suppressMessages(detach("package:HPRC", unload=TRUE))})
tryCatch(expr = {detach("package:HPRC", unload=TRUE)},error = function(){print("HPRC package not loaded, continuing update.")})
tryCatch(expr = {detach("package:HPRC", unload=TRUE)},error = function(cond){print("HPRC package not loaded, continuing update.")})
?attr
#' Function to make p-values prettier for reports.
#'
#' This function rounds individual p-values to 4 digits and returns them to the user.
#' @param pvalue A single, numeric p-value.
#' @param out_format Specifies what will be returned. Defaults to strings. Indicating numeric will return 0 for values less than 0.0001.
#' @export
#' @examples
#' p_value = 0.000000345
#' format_pvalue(p_value)
#' # "<0.0001"
format_pvalue = function(pvalue,out_format="string") {
options(scipen=999)
out_pval = round(pvalue,digits = 4)
if (out_format=="string") {
if (out_pval<0.0001) {
out_pval = "<0.0001"
} else {
out_pval = as.character(out_pval)
}
} else if (out_format=="numeric") {
if (out_pval<0.0001) {
out_pval = 0
}
}
return(out_pval)
}
format_pvalue(0.0000345)
p_value = 0.000000345
format_pvalue(0.0000345)
p_value = 0.000000345
format_pvalue(p_value,"numeric")
library(devtools)
setwd(r"(C:\Users\Zacb3\OneDrive - University of Oklahoma\HPRC Files\R\HPRC)")
document()
library(devtools)
setwd(r"(C:\Users\Zacb3\OneDrive - University of Oklahoma\HPRC Files\R\HPRC)")
document()
install("./HPRC")
install("HPRC")
